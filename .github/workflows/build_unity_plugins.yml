name: build unity plugins

on: 
  workflow_dispatch:
  push:
    paths: 
      - unity/native_src/**
      - unity/native_src_ourv8/**
      - unreal/Puerts/Source/JsEnv/Private/V8InspectorImpl.cpp
      - unreal/Puerts/Source/JsEnv/Private/V8InspectorImpl.h
      - unreal/Puerts/Source/JsEnv/Private/PromiseRejectCallback.hpp
      - .github/workflows/build_unity_plugins.yml

env:
  RUNID: 613573412
  BACKEND_URL: https://github.com/puerts/backend-v8/releases/download/V8_8.4.371.19_220808/v8_bin_8.4.371.19.tgz

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: wget released artifact
        shell: bash
        run: |
          cd unity/native_src
          wget -O backend '${{ env.BACKEND_URL }}'
          tar xzf backend
          rm -rf backend
      - name: Install NDK
        run: |
          cd ~
          wget -O NDK -q https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip
          sudo apt install unzip -y
          unzip -q NDK
          chmod -R 777 ~/android-ndk-r21b
          export ANDROID_NDK=~/android-ndk-r21b
      - name: Build
        run: |
          ls ~/android-ndk-r21b
          cd unity/native_src
          chmod 777 make_android.sh
          ./make_android.sh
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  ios:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: wget released artifact
        shell: bash
        run: |
          cd unity/native_src
          wget -O backend '${{ env.BACKEND_URL }}'
          tar xzf backend
          rm -rf backend
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_ios.sh
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  osx:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: wget released artifact
        shell: bash
        run: |
          cd unity/native_src
          wget -O backend '${{ env.BACKEND_URL }}'
          tar xzf backend
          rm -rf backend
      - name: Use Xcode 12.0 for x86
        run: sudo xcode-select -switch "/Applications/Xcode_12.app"
      - name: Build
        run: |
          cd unity/native_src
          sh ./make_osx.sh
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: wget released artifact
        shell: powershell
        run: |
          cd unity\native_src
          Invoke-WebRequest '${{ env.BACKEND_URL }}' -O backend
          tar -xzf backend
          del backend
      - name: Build
        run: |
          cd unity\native_src
          .\make_win64.bat
          .\make_win32.bat
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
  linux64:
    runs-on: ubuntu-latest
    steps:
      - name: Install libc++-dev
        run: |
          sudo apt-get install clang
          sudo apt-get install libc++-dev
          sudo apt-get install libc++abi-dev
      - uses: actions/checkout@v2
      - name: wget released artifact
        shell: bash
        run: |
          cd unity/native_src
          wget -O backend '${{ env.BACKEND_URL }}'
          tar xzf backend
          rm -rf backend
      - name: Build
        run: |
          cd unity/native_src
          chmod 777 make_linux64.sh
          ./make_linux64.sh
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./unity/Assets/Plugins/**/*
          name: Unity_Plugins_V8
